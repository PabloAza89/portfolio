:root {
  --IVBackgroundOpacity: rgba(0, 0, 0, 1.0);
  --IVBottomBarOpacity: rgb(77, 77, 77);
  --IVColor: red;
  --IVPosition: rgb(77, 77, 77);
  --IVFade: 2s;
}

@property --IVZoom {
  syntax: '<color>';
  initial-value: rgb(77, 77, 77);
  inherits: true;
}

@property --IVFlip {
  syntax: '<color>';
  initial-value: rgb(77, 77, 77);
  inherits: true;
}

@property --IVLineRotate {
  syntax: '<color>';
  initial-value: transparent;
  inherits: true;
}


@property --IVRotate {
  syntax: '<color>';
  initial-value: rgb(77, 77, 77);
  inherits: true;
}

/* SIMULATED BORDER VARS */

@property --IVZoomFlip {
  syntax: '<color>';
  initial-value: rgb(77, 77, 77);
  inherits: true;
}

@property --IVFlipRotate {
  syntax: '<color>';
  initial-value: rgb(77, 77, 77);
  inherits: true;
}

@property --IVRotateLock {
  syntax: '<color>';
  initial-value: rgb(77, 77, 77);
  inherits: true;
}

/* SIMULATED BORDER VARS */

@property --IVPositionLine {
  syntax: '<color>';
  initial-value: rgb(77, 77, 77);
  inherits: true;
}

@property --IVZoomLine {
  syntax: '<color>';
  initial-value: rgb(77, 77, 77);
  inherits: true;
}

@property --IVFlipLine {
  syntax: '<color>';
  initial-value: rgb(77, 77, 77);
  inherits: true;
}

@property --IVRotateLine {
  syntax: '<color>';
  initial-value: rgb(77, 77, 77);
  inherits: true;
}

@property --IVLock {
  syntax: '<color>';
  initial-value: rgb(119, 82, 77);
  inherits: true;
}

.IVBackground {
  /* background: green; */ /* DEV */
  position: fixed;
  width: 100vw;
  height: 100vh;
  /* background: rgba(0,0,0,0.4); */ /* AROUND IMAGE */
  /* background: rgba(0, 0, 0, 1.0); */
  background: var(--IVBackgroundOpacity);
  /* background: rgba(0, 0, 0, 1); */
  /* background: black; */
  z-index: 1000000; /* MORE THAN APP GRAY STRIPS */
  display: flex;
  justify-content: center;
  align-items: center;
}


.bottomBar {
  /* background: green; */ /* DEV */
  /* background: rgba(0, 128, 0, .5); */ /* DEV */
  background: var(--IVBottomBarOpacity);
  z-index: 1000001;
  display: flex;
  position: absolute;
  flex-direction: row;
  left: 0px;
  bottom: 0px;
  width: 100%;
  height: 49px;
  justify-content: center;
}

.buttonsContainer {
  /* background: red; */ /* DEV */
  display: flex;
  position: relative;
  flex-direction: row;
}

.imageViewerForeground {
  display: flex;
  position: relative;
  max-width: 80vw;
  max-height: 80vh;
  left: 0px;
  top: 0px;
  transform: scale(1);
  transition: transform .2s;
}

.imageCounter {
  /* background: blue; */ /* DEV */
  width: 70px;
  align-items: center;
  display: flex;
  position: absolute;
  left: -75px;
  color: #fff;
  height: 49px;
  justify-content: flex-end;
}

.zoomContainer {
  /* background: blue; */ /* DEV */
  width: 70px;
  align-items: center;
  display: flex;
  position: absolute;
  right: -75px;
  color: #fff;
  height: 49px;
}

.button {
  /* background: red !important; */ /* DEV */
  display: flex;
  position: fixed;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 0vw !important;
  min-width: 0vh !important;
  width: 35px !important;
  height: 35px !important;
  margin: 7px 3.5px !important;
  z-index: 1000002;
  transition-duration: 0.25s, 0.25s, 0.25s !important;
  transition-property: background-color, border-color, color !important;
}



.icon {
  display: flex;
  position: absolute;
  flex-direction: column;
  min-width: 0%;
  width: 23px !important;
  height: 23px !important;
}

.iconLock {
  color: var(--IVLock) !important;
  transition: color var(--IVFade) !important; /* LOCK TRANSITION */
}

.rotateX {
  transform: rotate(180deg);
}

.rotateY {
  transform: rotate(90deg);
}

.flipIcon {
  transform: scaleX(-1);
}

.flipIconTest {
  transform: rotate(90deg);
}

.lockContainer {
  display: flex;
  position: relative;
  /* background: red; */
  /* height: 42px; */
  /* margin-top: 3.5px; */
}



.buttonBG {
  display: flex;
  position: absolute;
  width: 84px;
  height: 42px;
  border-radius: 7.5px; /* 4px + 3.5px ~ inner-border-radius + padding */
  margin-top: 3.5px;
  transition: background var(--IVFade); /* LOCK TRANSITION */
}

.buttonBGTest {
  display: flex;
  position: absolute;
  width: 84px;
  height: 42px;
  /* border-radius: 7.5px; */
  margin-top: 3.5px;
  /* transition: background var(--IVFade); */
  left: 252px;
  /* background: red; */
  /* background:
    linear-gradient(
      to left,
      lime 0px, lime 42px,
      orange 42px
    ); */
}

rect.fade {
  width:84;
  height:42;
  rx:7.5;
  ry:7.5;
  transition: fill var(--IVFade), stop-color var(--IVFade);
}

.position {
  background: var(--IVPosition);
  left: 0px;
}

.zoom {
  background:
    no-repeat
    linear-gradient(
      to bottom,
      var(--IVZoomLine) 0px, var(--IVZoomLine) 1.5px,
      var(--IVZoom) 1.5px, var(--IVZoom) 40.5px,
      var(--IVZoomLine) 40.5px, var(--IVZoomLine) 42px
    );
  transition: --IVZoom var(--IVFade), --IVZoomLine var(--IVFade);


  left: 168px;
  will-change: background;
}

.zoom::after {
  position: absolute;
  content: "";
  inset: 0;
  z-index: -1;
  border-top-left-radius: 7.5px;
  border-bottom-left-radius: 7.5px;
  background: var(--IVZoomFlip);
  transition: --IVZoomFlip var(--IVFade);
}

.flip {
  background:
    no-repeat
    linear-gradient(
      to bottom,
      var(--IVFlipLine) 0px, var(--IVFlipLine) 1.5px,
      var(--IVFlip) 1.5px, var(--IVFlip) 40.5px,
      var(--IVFlipLine) 40.5px, var(--IVFlipLine) 42px
    );

  transition: --IVFlip var(--IVFade), --IVFlipLine var(--IVFade);

  left: 252px;
}

.flip::after {
  position: absolute;
  content: "";
  inset: 0;
  z-index: -1;
  background:
    linear-gradient(
      to left,
      var(--IVFlipRotate) 0%, var(--IVFlipRotate) 50%,
      var(--IVZoomFlip) 50%
    );
  transition: --IVFlipRotate var(--IVFade), --IVZoomFlip var(--IVFade);
}

.rotate {
  background:
    no-repeat
    linear-gradient(
      to bottom,
      var(--IVRotateLine) 0px, var(--IVRotateLine) 1.5px,
      var(--IVRotate) 1.5px, var(--IVRotate) 40.5px,
      var(--IVRotateLine) 40.5px, var(--IVRotateLine) 42px
    );
  transition: --IVRotate var(--IVFade), --IVRotateLine var(--IVFade);

  left: 336px;
}


.rotate::after {
  position: absolute;
  content: "";
  inset: 0;
  z-index: -1;
  background:
    linear-gradient(
      to left,
      var(--IVRotateLock) 0%, var(--IVRotateLock) 50%,
      var(--IVFlipRotate) 50%
    );
  transition: --IVRotateLock var(--IVFade), --IVFlipRotate var(--IVFade);
}



.lock {
  width: 42px;
  background: var(--IVLock);
  left: 420px;
}

.lock::after {
  position: absolute;
  content: "";
  inset: 0;
  z-index: -1;
  background: red;
  background:
    linear-gradient(
      to left,
      transparent 0%, transparent 50%,
      var(--IVRotate) 50%
    );
  transition: --IVRotate var(--IVFade);
}

.IVLine {
  position: absolute;
  right: 21px;
  width: 420px;
  height: 2px;
  z-index: -1;
  /* z-index: 1000003; */
  background:
    no-repeat /* 1st BLOCK */
    linear-gradient(
      to left,
      var(--IVRotateLine) 0px, var(--IVRotateLine) 84px, /* ROTATE SECTION */
      var(--IVFlipLine) 84px, var(--IVFlipLine) 168px, /* FLIP SECTION */
      var(--IVZoomLine) 168px, var(--IVZoomLine) 252px, /* ZOOM SECTION */
      var(--IVPositionLine) 252px, var(--IVPositionLine) 420px /* ZOOM SECTION */
    );
  transition:
    --IVPositionLine var(--IVFade), --IVZoomLine var(--IVFade),
    --IVFlipLine var(--IVFade), --IVRotateLine var(--IVFade);
}

.IVUpperLine {
  top: 2px;
}

.IVLowerLine {
  bottom: 2px;
}


.lockSettings {
  display: flex;
  flex-direction: column;
  background: lightblue;
  position: absolute;
  bottom: -200px;
  transition: bottom 1s;
  width: 100%;
  height: 200px;
  /* top: -500px; */
}

/* BEGIN SWITCH */

.switch {
  /* background: red !important; */ /* DEV */
  margin-left: 12px;
  width: 38px !important;
  height: 22px !important;
  padding: 0px !important;
}

.track { /* SWITH BACKGROUND */
  border-radius: 40px !important;
  height: 22px !important;
  padding: 0px !important;
  opacity: 1 !important;
  transition-duration: 500 !important;
}

.trackEnabled { /* ENABLED BACKGROUND COLOR */
  background-color: #65C466!important;
}

.trackDisabled { /* DISABLED BACKGROUND COLOR */
  background-color: lightgray !important;
}

.thumb { /* SWITH CIRCLE */
  width: 18px !important;
  height: 18px !important;
  background-color: #fff !important;
  color: #33cf4d !important;
  border: 0px !important;
}

.switchBase {
  left: -7px !important;
  top: -7px !important;
  transition-duration: 300ms !important;
}

.checked { /* DISABLES GLOW */
  transform: translateX(16px) !important;
  color: #fff !important;
  color: transparent !important;
  background-color: transparent !important;
}

.colorPrimary { /* DISABLES GLOW */
  color: transparent !important;
  background-color: transparent !important;
}

/* END SWITCH */